{"version":3,"sources":["components/logo/logo_2016.png","components/timeline/timeline.js","components/dashboard/map/map.js","components/dashboard/chart/Chart.js","components/dashboard/liveValues/liveValues.js","components/dashboard/dashboard.js","components/dashboard/faker/faker.js","components/flight_control/flight_control.js","components/settings/settings.js","components/imprint/imprint.js","components/navigation/sidebar.js","components/navigation/sidebarToggler/sidebarToggler.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Timeline","react_default","a","createElement","className","react","build","interval","title","subtitle","Component","withScriptjs","withGoogleMap","props","lib","defaultCenter","lat","lng","defaultZoom","options","strokeColor","path","data","id","style","color","fontWeight","fontSize","Chart","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartOptions","text","chart","zoomType","type","xAxis","yAxis","opposite","tooltip","shared","series","name","valueSuffix","unit","dashStyle","nextProps","nextContext","_loop","key","_Object$keys","_i","index","findIndex","x","keys","length","setState","objectSpread","highcharts_react_min_default","highcharts","Highcharts","containerProps","height","width","React","LiveValues","liveValues","_this2","map","value","slice","toString","Dashboard","now","Date","fakeInterval","alt","climb","max_h","tmp_out","tmp_in","tmp_bat","gps","sat","press","volt","geo","timestamp","climbing","setInterval","fakeData","prevAlt","Math","round","random","floor","heightValues","max","apply","toConsumableArray","concat","fake_lng","toFixed","fake_lat","pow","fake","clearInterval","toLocaleDateString","day","month","year","hour","minute","second","map_map","loadingElement","containerElement","mapElement","googleMapURL","chart_Chart","liveValues_liveValues","FlightControl","paddingTop","Settings","Imprint","href","Sidebar","expanded","prevProps","prevState","Link","react_router_dom","to","icon","src","logo","SidebarToggler","_React$Component","arguments","inherits","createClass","onClick","onToggle","App","basename","process","navigation_sidebar","sidebarToggler_SidebarToggler","react_router","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","components_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.559aac17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_2016.7443f9c9.png\";","import React, {Component, Fragment} from 'react';\nimport {Timeline as TimelineScribble, Event} from \"react-timeline-scribble\";\nimport \"./timeline.css\"\n\nclass Timeline extends Component {\n    render() {\n        return (\n            <div className=\"timeline_container\">\n                <Fragment>\n                    <h1>Eventkalender</h1>\n                    <TimelineScribble>\n                        <Event interval={\"04 Juli 19 - 15:00\"} title={\"Teststart\"} subtitle={\"Bierhalde in Ensdorf\"}>\n                            dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                            quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                            consequat. Duis aute irure dolor in reprehenderit in voluptate velit\n                            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n                            cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\n                            id est laborum.\n                        </Event>\n                        <Event interval={\"15 September 19 - 08:00\"} title={\"Campusfest - htw saar\"}\n                               subtitle={\"Campus Rotenbühl\"}>\n                            dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\n                            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                            quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                            consequat. Duis aute irure dolor in reprehenderit in voluptate velit\n                            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n                            cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\n                            id est laborum.\n                        </Event>\n                    </TimelineScribble>\n                </Fragment>\n            </div>\n        );\n    }\n}\n\nexport default Timeline;","import {GoogleMap, withGoogleMap, withScriptjs, Polyline} from \"react-google-maps\"\nimport React from \"react\"\nimport \"./map.css\"\n\n\nexport default withScriptjs(withGoogleMap((props) => {\n\n    return <GoogleMap\n        defaultCenter={{lat: 49.2351, lng: 6.9739}}\n        defaultZoom={13}>\n        <Polyline options={{strokeColor: \"green\"}} path={props.data}/>\n        <div id=\"legend\">\n            <span style={{\n                color: \"green\",\n                fontWeight: \"bolder\",\n                fontSize: \" 1.2em\"\n            }}>-</span> Flugroute\n            <br/>\n            <span style={{\n                color: \"orange\",\n                fontWeight: \"bolder\",\n                fontSize: \" 1.2em\"\n            }}>-</span> Vorhersage\n        </div>\n    </GoogleMap>\n}));\n\n","/*CHART*/\nimport React from 'react';\nimport Highcharts from \"highcharts/highcharts\"\nimport HighchartsReact from \"highcharts-react-official/dist/highcharts-react.min\"\n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chartOptions: {\n                title: {\n                    text: 'Sensorendiagramm'\n                },\n                chart: {\n                    zoomType: 'x',\n                    type: 'area'\n                },\n                xAxis: {\n                    type: 'datetime'\n                },\n                yAxis: [{\n                    title: {\n                        text: ''\n                    }\n                }, {\n                    title: {\n                        text: ''\n                    }, opposite: true\n                }],\n                tooltip: {\n                    shared: true\n                },\n                series: [{\n                    id: 'alt',\n                    name: this.props.data[\"alt\"].name,\n                    data: this.props.data[\"alt\"].data,\n                    yAxis: 0,\n                    tooltip: {\n                        valueSuffix: this.props.data[\"alt\"].unit\n                    }\n                }, {\n                    id: 'sat',\n                    name: this.props.data[\"sat\"].name,\n                    data: this.props.data[\"sat\"].data,\n                    yAxis: 1,\n                    type: 'column'\n                }, {\n                    id: 'tmp_out',\n                    name: this.props.data[\"tmp_out\"].name,\n                    data: this.props.data[\"tmp_out\"].data,\n                    type: 'spline',\n                    dashStyle: 'shortdot',\n                    yAxis: 1,\n                    tooltip: {\n                        valueSuffix: this.props.data[\"tmp_out\"].unit\n                    }\n\n                }, {\n                    id: 'tmp_in',\n                    name: this.props.data[\"tmp_in\"].name,\n                    data: this.props.data[\"tmp_in\"].data,\n                    type: 'spline',\n                    dashStyle: 'shortdot',\n                    yAxis: 1,\n                    tooltip: {\n                        valueSuffix: this.props.data[\"tmp_in\"].unit\n                    }\n\n                }, {\n                    id: \"tmp_bat\",\n                    name: this.props.data[\"tmp_bat\"].name,\n                    data: this.props.data[\"tmp_bat\"].data,\n                    type: 'spline',\n                    dashStyle: 'shortdot',\n                    yAxis: 1,\n                    tooltip: {\n                        valueSuffix: this.props.data[\"tmp_bat\"].unit\n                    }\n\n                }, {\n                    id: 'volt',\n                    name: this.props.data[\"volt\"].name,\n                    data: this.props.data[\"volt\"].data,\n                    type: 'spline',\n                    yAxis: 0,\n                    tooltip: {\n                        valueSuffix: this.props.data[\"volt\"].unit\n                    }\n\n                }, {\n                    id: 'press',\n                    name: this.props.data[\"press\"].name,\n                    data: this.props.data[\"press\"].data,\n                    yAxis: 0,\n                    tooltip: {\n                        valueSuffix: this.props.data[\"press\"].unit\n                    }\n                }]\n            }\n        }\n\n\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n        if (this.props !== nextProps) {\n\n            const series = this.state.chartOptions.series\n\n            for (const key of Object.keys(nextProps.data)) {\n\n                const index = series.findIndex(x => x.id === key)\n\n                if (index >= 0) {\n                    series[index].data = nextProps.data[key].data\n\n                }\n\n            }\n\n\n            this.setState((state) => ({\n\n                    chartOptions: {\n                        ...state.chartOptions,\n                        series: series\n                    }\n\n                })\n            )\n\n        }\n\n    }\n\n\n    render() {\n        const {chartOptions} = this.state;\n\n        return <HighchartsReact\n            highcharts={Highcharts}\n            options={chartOptions}\n            containerProps={{style: {height: \"100%\", width: \"100%\"}}}\n        />\n    }\n}\n\n\nexport default Chart","import React from \"react\"\nimport \"./liveValues.css\"\n\nclass LiveValues extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            liveValues: {...this.props.data}\n\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n        if (this.props !== nextProps) {\n            this.setState({\n                liveValues: {...nextProps.data}\n            })\n        }\n    }\n\n\n    render() {\n        return Object.keys(this.state.liveValues).map((key) => {\n\n            if(key===\"geo\"){\n                return \"\"\n            }\n\n            const value = this.state.liveValues[key]\n\n            return <div className=\"valueCard\" key={key}>\n                <h5 className=\"valueCard_name\">{value.name}</h5>\n                <p className=\"valueCard_value\">{value.data.slice(-1)[0][1].toString()}\n                    <span className=\"valueCard_unit\">&nbsp;{value.unit}</span>\n                </p>\n            </div>\n\n\n        });\n    }\n}\n\nexport default LiveValues;","import React, {Component} from 'react';\nimport \"./dashboard.css\"\nimport Map from \"./map/map\"\nimport {GoogleMapsApiKey} from \"../../config.js\"\n\n\nimport Chart from \"./chart/Chart\"\nimport fake from \"./faker/faker\"\nimport LiveValues from \"./liveValues/liveValues\"\n\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props)\n\n        const now = Date.now()\n        this.state = {\n            fakeInterval: 1000,\n            data: {\n                alt: {\n                    name: \"akt. Höhe\",\n                    unit: \"m\",\n                    data: [[now, 0]]\n                },\n                climb: {\n                    name: \"Steigrate\",\n                    unit: \"m/s\",\n                    data: [[now, 0]]\n                },\n                max_h: {\n                    name: \"max. Höhe\",\n                    unit: \"m\",\n                    data: [[now, 0]]\n                },\n                tmp_out: {\n                    name: \"temp. außen\",\n                    unit: \"°C\",\n                    data: [[now, 25]]\n                },\n                tmp_in: {\n                    name: \"temp. innen\",\n                    unit: \"°C\",\n                    data: [[now, 26]]\n                },\n                tmp_bat: {\n                    name: \"temp. Bat\",\n                    unit: \"°C\",\n                    data: [[now, 28]]\n                },\n                lng: {\n                    name: \"Längengrad\",\n                    unit: \"°\",\n                    data: [[now, 6.9739]]\n                },\n                lat: {\n                    name: \"Breitengrad\",\n                    unit: \"°\",\n                    data: [[now, 49.2351]]\n                },\n                gps: {\n                    name: \"GPS\",\n                    unit: \"\",\n                    data: [[now, true]]\n                },\n                sat: {\n                    name: \"Sat\",\n                    unit: \"\",\n                    data: [[now, 5]]\n                },\n                press: {\n                    name: \"Luftdruck\",\n                    unit: \"bar\",\n                    data: [[now, 1.01]]\n                },\n                volt: {\n                    name: \"Spannung\",\n                    unit: \"V\",\n                    data: [[now, 3.600]]\n                },\n                geo: {\n                    data: [{timestamp: now, lng:6.9739, lat:49.2351}]\n                }\n\n            }\n\n\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        let climbing = true\n\n\n        this.interval = setInterval(() => {\n\n            const fakeData = fake(this.state.data, climbing)\n\n            if (fakeData.alt.data.slice(-1)[0][1] >= 35000) {\n                climbing = false\n            }\n\n            if (fakeData.alt.data.slice(-1)[0][1] < 0 && !climbing) {\n                clearInterval(this.interval);\n            }\n\n\n            if (fakeData.alt.data.slice(-1)[0][1] >= 0) {\n\n                this.setState({\n                    data: fakeData\n                })\n            }\n\n\n        }, this.state.fakeInterval)\n\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"grid-container\">\n\n\n                <div className=\"flight_info_container\">\n                    <p>Gestartet am: {new Date(this.state.data.alt.data[0][0]).toLocaleDateString('de-DE', {\n                        day : 'numeric',\n                        month : 'short',\n                        year : 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit',\n                        second: '2-digit'\n                    })}</p>\n                    <p>Zuletzt empfangen am: {new Date(this.state.data.alt.data.slice(-1)[0][0]).toLocaleDateString('de-DE', {\n                        day : 'numeric',\n                        month : 'short',\n                        year : 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit',\n                        second: '2-digit'\n                    })}</p>\n                </div>\n\n\n                <div className=\"map_chart_container\">\n                    <div className=\"map\">\n\n                    <Map\n                        data={this.state.data.geo.data}\n                        loadingElement={<div className=\"loader\"/>}\n                        containerElement={<div style={{height: \"100%\", width: '100%'}}/>}\n                        mapElement={<div style={{height: `100%`}}/>}\n                        googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=\"+ GoogleMapsApiKey}\n                    />\n\n\n                </div>\n\n\n                <div className=\"chart\">\n\n                    <Chart data={this.state.data}/>\n\n                    </div>\n                </div>\n\n\n                <div className=\"live_values\">\n                    <LiveValues data={this.state.data}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n\n\n\n\n","export default function fake(fakeData, climbing) {\n\n    const now = Date.now()\n\n    let prevAlt = fakeData.alt.data.slice(-1)[0][1],\n        alt = Math.round(prevAlt < 35000 && climbing\n            ? prevAlt + Math.random() * Math.floor(300)\n            : prevAlt - Math.random() * Math.floor(prevAlt > 30000 ? 1000 : 450))\n\n    const heightValues = fakeData.alt.data.map(x => x[1]);\n\n    const max = Math.max(...heightValues, alt),\n        fake_lng = +(fakeData.lng.data.slice(-1)[0][1] + Math.random()/1000).toFixed(4),\n        fake_lat = +(fakeData.lat.data.slice(-1)[0][1] + Math.random()/1000).toFixed(4)\n\n    return {\n        ...fakeData,\n        alt: {\n            ...fakeData.alt,\n            data: [...fakeData.alt.data, [now, alt]]\n        },\n        sat: {\n            ...fakeData.sat,\n            data: [...fakeData.sat.data, [now, Math.round(Math.random() * Math.floor(5))]]\n        },\n        tmp_out: {\n            ...fakeData.tmp_out,\n            data: [...fakeData.tmp_out.data, [now, +(25 - fakeData.alt.data.slice(-1)[0][1] / 1000 * 6).toFixed(2)]]\n        },\n        tmp_in: {\n            ...fakeData.tmp_in,\n            data: [...fakeData.tmp_in.data, [now, +(fakeData.tmp_out.data.slice(-1)[0][1] + 3).toFixed(2)]]\n        },\n        tmp_bat: {\n            ...fakeData.tmp_bat,\n            data: [...fakeData.tmp_bat.data, [now, +(fakeData.tmp_out.data.slice(-1)[0][1] + 6).toFixed(2)]]\n        },\n        volt: {\n            ...fakeData.volt,\n            data: [...fakeData.volt.data, [now, +(fakeData.volt.data.slice(-1)[0][1] * (1 - Math.random() / 100)).toFixed(2)]]\n        },\n        press: {\n            ...fakeData.press,\n            data: [...fakeData.press.data, [now, +(1.0135 * Math.pow(1 - 6.5 * fakeData.alt.data.slice(-1)[0][1] / 288150, 5.255)).toFixed(2)]]\n        },\n        lng: {\n            ...fakeData.lng,\n            data: [...fakeData.lng.data, [now, fake_lng]]\n        },\n        lat: {\n            ...fakeData.lat,\n            data: [...fakeData.lat.data, [now, fake_lat]]\n        },\n        gps: {\n            ...fakeData.gps,\n            data: [...fakeData.gps.data, [now, Math.random() >= 0.5]]\n        },\n        max_h: {\n            ...fakeData.max_h,\n            data: [...fakeData.max_h.data, [now, max]]\n        },\n        climb: {\n            ...fakeData.climb,\n            data: [...fakeData.climb.data, [now, +(alt - fakeData.alt.data.slice(-1)[0][1]).toFixed(2)]]\n        },\n        geo: {\n            data: [...fakeData.geo.data, {timestamp: now, lng: fake_lng, lat: fake_lat}]\n        }\n    }\n\n\n}\n\n","import React, {Component} from 'react';\n\nclass FlightControl extends Component {\n    render() {\n        return (\n            <div style={{paddingTop:\"5px\"}}>\n                FlightControl - not available yet\n            </div>\n        );\n    }\n}\n\nexport default FlightControl;","import React, {Component} from 'react';\n\nclass Settings extends Component {\n    render() {\n        return (\n            <div style={{paddingTop:\"5px\"}}>\n                Settings - not available yet\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React, {Component} from 'react';\n\nclass Imprint extends Component {\n    render() {\n        return (\n            <div style={{paddingTop:\"5px\"}}>\n                This is just a demo version of the <a href=\"https://github.com/itshallrun/stratos_react\">stratos-react</a> github package.\n\n                For use in production, please modify this imprint according to your needs.\n            </div>\n        );\n    }\n}\n\nexport default Imprint;","import React, {Component} from 'react';\nimport \"./sidebar.css\"\nimport {NavLink} from \"react-router-dom\"\nimport logo from '../logo/logo_2016.png'\n\nclass Sidebar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            expanded: props.expanded\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.expanded !== this.props.expanded) {\n            this.setState({\n                expanded: this.props.expanded\n            })\n        }\n    }\n\n\n\n\n    render() {\n\n        const Link = (props) => <NavLink to={props.to}>\n            <i className={props.icon}/>\n            <span className={props.expanded ? \"visible\" : \"hidden\" }>{props.text}</span>\n        </NavLink>\n\n        const expanded = this.state.expanded;\n\n        return (\n\n            <div className={\"sidebar \" + (expanded?\"nav_expanded\":\"nav_contracted\")}>\n                <img className={\"logo \" + (expanded ? \"logo_large\" : \"logo_small\")} src={logo}\n                     alt=\"stratos logo\"/>\n\n                <Link to=\"/timeline\" icon=\"fa fa-clock-o\" expanded={expanded} text=\"Timeline\"/>\n\n                <Link to=\"/dashboard\" icon=\"fa fa-dashboard\" expanded={expanded} text=\"Dashboard\"/>\n\n                <Link to=\"/einstellungen\" icon=\"fa fa-gears\" expanded={expanded} text=\"Einstellungen\"/>\n\n                <Link to=\"/flug_kontrolle\" icon=\"fa fa-paper-plane-o\" expanded={expanded} text=\"Flug Kontrolle\"/>\n\n                <Link to=\"/impressum\" icon=\"fa fa-info\" expanded={expanded} text=\"Impressum\"/>\n\n\n            </div>\n\n\n        );\n    }\n}\n\n\nexport default Sidebar;","import React from \"react\"\nimport \"./sidebarToggler.css\"\n\n\nexport class SidebarToggler extends React.Component {\n    render() {\n        return (\n            <button className=\"sidebarToggler\"\n                    onClick={this.props.onToggle}>\n                <i className={this.props.expanded ? \"fa fa-angle-double-left\" : \"fa fa-bars\"}/>\n            </button>\n        );\n    }\n}","import \"./normalize.css\"\nimport React from 'react';\nimport {BrowserRouter, Route} from \"react-router-dom\"\n\nimport Timeline from \"../timeline/timeline\"\nimport Dashboard from \"../dashboard/dashboard\"\nimport FlightControl from \"../flight_control/flight_control\"\nimport Settings from \"../settings/settings\"\nimport Imprint from \"../imprint/imprint\"\n\nimport Sidebar from \"../navigation/sidebar\"\nimport {SidebarToggler} from \"../navigation/sidebarToggler/sidebarToggler\"\nimport \"./App.css\"\n\n\nclass App extends React.Component {\n\n    state = {\n        expanded: false\n    };\n\n    onToggle = () => {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n    };\n\n\n    render() {\n\n        return <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className=\"wrapper\">\n\n                <nav>\n                    <Sidebar onToggle={this.onToggle}\n                             expanded={this.state.expanded}/>\n                </nav>\n\n                <main>\n\n                    <menu>\n                        <SidebarToggler expanded={this.state.expanded} onToggle={this.onToggle}/>\n                    </menu>\n\n                    <Route exact path=\"/\" component={Dashboard}/>\n                    <Route path=\"/timeline\" component={Timeline}/>\n                    <Route path=\"/dashboard\" component={Dashboard}/>\n                    <Route path=\"/flug_kontrolle\" component={FlightControl}/>\n                    <Route path=\"/einstellungen\" component={Settings}/>\n                    <Route path=\"/impressum\" component={Imprint}/>\n\n                </main>\n            </div>\n\n        </BrowserRouter>\n\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}